importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-sw.js"),self.addEventListener("install",(e=>{self.skipWaiting()})),self.addEventListener("activate",(e=>self.clients.claim())),self.addEventListener("push",(e=>{if(!e.data)return;const s=e.data.json(),t={body:s.options.body,icon:"/icon.png",badge:"/badge.png",vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1},actions:[{action:"view",title:"View Story"}]};e.waitUntil(self.registration.showNotification(s.title,t))})),self.addEventListener("notificationclick",(e=>{e.notification.close(),e.action,e.waitUntil(clients.openWindow("/#/"))})),workbox.precaching.precacheAndRoute([{url:"../index.html",revision:"1"},{url:"../styles.css",revision:"1"},{url:"AddStory.js",revision:"1"},{url:"Home.js",revision:"1"},{url:"Profile.js",revision:"1"},{url:"StoryModel.js",revision:"1"},{url:"StoryPresenter.js",revision:"1"},{url:"UI.js",revision:"1"},{url:"db.js",revision:"1"},{url:"../../manifest.json",revision:"1"},{url:"../icons/mobile.png",revision:"1"},{url:"../icons/desktop.png",revision:"1"},{url:"../icons/add-icon.png",revision:"1"},{url:"../favicon1.ico",revision:"1"},{url:"../icons/icon192x192.png",revision:"1"},{url:"../icons/icon512x512.png",revision:"1"}]),workbox.routing.registerRoute(new RegExp(".(?:png|jpg|jpeg|svg|gif|webp)$|(?:photo|images|image|img)"),new workbox.strategies.StaleWhileRevalidate({cacheName:"images-cache",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:200,maxAgeSeconds:2592e3}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]})),workbox.routing.registerRoute((({url:e})=>e.origin.includes("story-api.dicoding.dev")&&(e.pathname.includes("/images/")||e.href.includes("photoUrl")||e.pathname.includes("/photo/"))),new workbox.strategies.StaleWhileRevalidate({cacheName:"story-api-images",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:150,maxAgeSeconds:1209600}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]})),workbox.routing.registerRoute((({request:e})=>"script"===e.destination||"style"===e.destination||"document"===e.destination),new workbox.strategies.StaleWhileRevalidate({cacheName:"static-assets-cache"})),workbox.routing.registerRoute(new RegExp("https://story-api.dicoding.dev/v1/stories"),new workbox.strategies.NetworkFirst({cacheName:"stories-cache",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:604800})]})),self.addEventListener("fetch",(e=>{e.request.url.includes("/v1/stories")&&!e.request.url.includes("/add")?e.respondWith(fetch(e.request).then((s=>{const t=s.clone();return caches.open("stories-detail-cache").then((s=>{s.put(e.request,t)})),s})).catch((async()=>{const s=await caches.match(e.request);if(s)return s;const t=await self.clients.matchAll();return t.length>0?(t[0].postMessage({type:"GET_STORIES_FROM_INDEXEDDB"}),new Promise((e=>{self.addEventListener("message",(function s(t){"INDEXEDDB_STORIES"===t.data.type&&(self.removeEventListener("message",s),e(new Response(JSON.stringify({listStory:t.data.stories}),{headers:{"Content-Type":"application/json"}})))})),setTimeout((()=>{e(new Response(JSON.stringify({error:!0,message:"Failed to fetch stories while offline"}),{status:503,headers:{"Content-Type":"application/json"}}))}),3e3)}))):new Response(JSON.stringify({error:!0,message:"You are offline. No cached data available."}),{status:503,headers:{"Content-Type":"application/json"}})}))):("image"===e.request.destination||e.request.url.includes(".jpg")||e.request.url.includes(".png")||e.request.url.includes("photo")||e.request.url.includes("images"))&&e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request).then((s=>{if(!s||200!==s.status||"basic"!==s.type)return s;const t=s.clone();return caches.open("images-cache").then((s=>{s.put(e.request,t)})),s})).catch((()=>new Response("Image unavailable offline",{status:503,statusText:"Service Unavailable"}))))))})),self.addEventListener("message",(e=>{e.data&&"STORIES_FROM_INDEXEDDB"===e.data.type&&(self.indexedDBStories=e.data.stories)}));